/*

Nesse desafio, voc√™ ir√° solicitar ao usu√°rio que ele insira **dois n√∫meros** e, a partir da√≠, calcular:

- [ ]  A soma dos dois n√∫meros;
- [ ]  A subtra√ß√£o dos dois n√∫meros;
- [ ]  A multiplica√ß√£o dos dois n√∫meros;
- [ ]  A divis√£o dos dois n√∫meros;
- [ ]  O resto da divis√£o dos dois n√∫meros;

F√°cil at√© aqui, n√©? Bora se desafiar? üëÄ üßë‚ÄçüöÄ

- [ ]  Verifique se a soma dos dois n√∫meros √© par ~~(ou √≠mpar)~~;
- [ ]  Verifique se os dois n√∫meros inseridos s√£o iguais ~~(ou diferentes)~~.

Lembre-se de sempre mostrar na tela o resultado de cada uma dessas opera√ß√µes!

*/

function sum(number1, number2) {
  alert(`A soma dos dois n√∫meros √© ${number1 + number2}`)
  return number1 + number2
}

function subtract(number1, number2) {
  alert(`A subtra√ß√£o dos dois n√∫meros √© ${number1 - number2}`)
  
}

function multiplication(number1, number2) {
  alert(`A multiplica√ß√£o dos dois n√∫meros √© ${number1 * number2}`)
  
}

function division(number1, number2) {
  alert(`A divis√£o dos dois n√∫meros √© ${number1 / number2}`)
  
}

function restOfDivision(number1, number2) {
  alert(`A resto da divis√£o dos dois n√∫meros √© ${number1 % number2}`)
  
}

function ifSumEvenOrOdd(sumResult) {
  let verifySumResult = sumResult % 2
  if (verifySumResult === 0) {
    alert(`A soma dos dois n√∫meros √© par.`)
  } else {
    alert(`A soma dos dois n√∫meros √© √≠mpar.`)
  }
}

function checkIfEqualNumbers(number1, number2) {
  if (number1 === number2) {
    alert(`Os dois n√∫meros s√£o iguais.`)
  } else {
    alert(`Os dois n√∫meros s√£o diferentes.`)
  }
}





let firstNumber = Number(prompt('Digite o primeiro n√∫mero: '))
let secondNumber = Number(prompt('Digite o segundo n√∫mero: '))

let sumResult = sum(firstNumber, secondNumber)
subtract(firstNumber, secondNumber)
multiplication(firstNumber, secondNumber)
division(firstNumber, secondNumber)
restOfDivision(firstNumber, secondNumber)
ifSumEvenOrOdd(sumResult)
checkIfEqualNumbers(firstNumber, secondNumber)